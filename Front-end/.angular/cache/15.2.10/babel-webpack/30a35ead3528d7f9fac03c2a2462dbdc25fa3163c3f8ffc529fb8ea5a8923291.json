{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/Angular-PP/Front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport axios from 'axios';\nlet SearchmoviesComponent = class SearchmoviesComponent {\n  constructor(activatedRoute, Injector) {\n    this.activatedRoute = activatedRoute;\n    this.array = [];\n    this.inputValue = \"\";\n    this.query = '';\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(params => {\n      this.query = params.get('query') || '';\n      console.log(this.query);\n      this.fetchData();\n    });\n  }\n  fetchData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const options = {\n        method: 'GET',\n        url: 'https://movies-api14.p.rapidapi.com/search',\n        params: {\n          query: _this.query\n        },\n        headers: {\n          'X-RapidAPI-Key': 'da65b45924mshae583402eaa7203p14b4c7jsnbbc9f0133ea1',\n          'X-RapidAPI-Host': 'movies-api14.p.rapidapi.com'\n        }\n      };\n      try {\n        const response = yield axios.request(options);\n        _this.array = response.data.contents;\n        console.log(_this.array);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n  moredetails(movie) {\n    const movieService = this.injector.get(MovieService);\n    movieService.setSelectedMovie(movie);\n  }\n};\nSearchmoviesComponent = __decorate([Component({\n  selector: 'app-searchmovies',\n  templateUrl: './searchmovies.component.html',\n  styleUrls: ['./searchmovies.component.css']\n})], SearchmoviesComponent);\nexport { SearchmoviesComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,OAAOC,KAAK,MAAM,OAAO;AAQlB,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAIhCC,YAAoBC,cAA8B,EAACC,QAAS;IAAxC,mBAAc,GAAdD,cAAc;IAFlC,UAAK,GAAW,EAAE;IAClB,eAAU,GAAY,EAAE;IAEtB,IAAI,CAACE,KAAK,GAAG,EAAE;EACjB;EAEAC,QAAQ;IAEN,IAAI,CAACH,cAAc,CAACI,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MAC9C,IAAI,CAACJ,KAAK,GAAGI,MAAM,CAACC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE;MACtCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC;MACvB,IAAI,CAACQ,SAAS,EAAE;IAClB,CAAC,CAAC;EACJ;EACMA,SAAS;IAAA;IAAA;MAEb,MAAMC,OAAO,GAAE;QACbC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAC,4CAA4C;QAChDP,MAAM,EAAC;UACLJ,KAAK,EAAE,KAAI,CAACA;SACb;QACDY,OAAO,EAAE;UACP,gBAAgB,EAAE,oDAAoD;UACtE,iBAAiB,EAAE;;OAEtB;MACD,IAAI;QACA,MAAMC,QAAQ,SAASlB,KAAK,CAACmB,OAAO,CAACL,OAAO,CAAC;QAC7C,KAAI,CAACM,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,QAAQ;QACnCX,OAAO,CAACC,GAAG,CAAC,KAAI,CAACQ,KAAK,CAAC;OAC1B,CAAC,OAAOG,KAAK,EAAE;QACdZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;;IACnB;EACH;EACAC,WAAW,CAACC,KAAU;IACpB,MAAMC,YAAY,GAAG,IAAI,CAACC,QAAQ,CAACjB,GAAG,CAACkB,YAAY,CAAC;IACpDF,YAAY,CAACG,gBAAgB,CAACJ,KAAK,CAAC;EACxC;CAEC;AA1CYxB,qBAAqB,eALjCF,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW/B,qBAAqB,CA0CjC;SA1CYA,qBAAqB","names":["Component","axios","SearchmoviesComponent","constructor","activatedRoute","Injector","query","ngOnInit","paramMap","subscribe","params","get","console","log","fetchData","options","method","url","headers","response","request","array","data","contents","error","moredetails","movie","movieService","injector","MovieService","setSelectedMovie","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\Angular-PP\\Front-end\\src\\app\\searchmovies\\searchmovies.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport axios from 'axios';\n\n\n@Component({\n  selector: 'app-searchmovies',\n  templateUrl: './searchmovies.component.html',\n  styleUrls: ['./searchmovies.component.css']\n})\nexport class SearchmoviesComponent implements OnInit{\n  query: string;\n  array: any [] = [];\n  inputValue : string = \"\";\n  constructor(private activatedRoute: ActivatedRoute,Injector:) {\n    this.query = '';  \n  }\n\n  ngOnInit(): void {\n   \n    this.activatedRoute.paramMap.subscribe(params => {\n      this.query = params.get('query') || '';\n      console.log(this.query);\n      this.fetchData();\n    });\n  }\n  async fetchData()\n  {\n    const options= {\n      method: 'GET',\n      url:'https://movies-api14.p.rapidapi.com/search',\n      params:{\n        query: this.query\n      },\n      headers: {\n        'X-RapidAPI-Key': 'da65b45924mshae583402eaa7203p14b4c7jsnbbc9f0133ea1',\n        'X-RapidAPI-Host': 'movies-api14.p.rapidapi.com'\n      }\n    };\n    try {\n        const response = await axios.request(options);\n        this.array = response.data.contents;\n        console.log(this.array);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  moredetails(movie: any) {\n    const movieService = this.injector.get(MovieService);\n    movieService.setSelectedMovie(movie);\n}\n   \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}